---

- name: Create directories
  block:
    - name: Configuration and data directories
      file:
        dest: "{{ item }}"
        state: directory
        owner: "{{ consul_user }}"
        group: "{{ consul_group }}"
        mode: 0700
      with_items:
        - "{{ consul_config_path }}"
        - "{{ consul_configd_path }}"
        - "{{ consul_data_path }}"

    - name: Run directory
      file:
        dest: "{{ consul_run_path }}"
        state: directory
        owner: "{{ consul_user }}"
        group: "{{ consul_group }}"
        mode: 0750

    - name: Create Temporary Directory for Extraction
      tempfile:
        state: directory
        prefix: ansible-consul.
      become: false
      vars:
        ansible_become: false
      register: install_temp
      tags: installation
      run_once: true
      delegate_to: 127.0.0.1

- name: Create log directory
  file:
    dest: "{{ consul_log_path }}"
    state: directory
    owner: "{{ consul_user }}"
    group: "{{ consul_group }}"
    mode: 0700

- name: Create log directory
  file:
    dest: "{{ item }}"
    state: directory
    owner: "{{ syslog_user | default('root', true) }}"
    group: "{{ syslog_group | default('root', true) }}"
    mode: 0700
  with_items:
    - "{{ consul_log_path }}"

- name: Verify binary path
  file:
    path: "{{ consul_bin_path }}"
    state: directory
    owner: root
    mode: 0755

- name: Check for existing Consul binary
  stat:
    path: "{{ consul_binary }}"
  register: consul_binary_installed

- name: Calculate whether to install consul binary
  set_fact:
    consul_install_binary: "{{ consul_install_upgrade | bool or not consul_binary_installed.stat.exists }}"

- block:
  - name: Install unzip
    package:
      name: "unzip"
      state: present
    tags: installation

  - name: Read package checksum file
    stat:
      path: "{{ install_temp.path }}/consul_{{ consul_version }}_SHA256SUMS"
    become: false
    vars:
      ansible_become: false
    run_once: true
    register: consul_checksum
    tags: installation
    delegate_to: 127.0.0.1

  - name: Download package checksum file
    get_url:
      url: "{{ consul_checksum_file_url }}"
      dest: "{{ install_temp.path }}/consul_{{ consul_version }}_SHA256SUMS"
    become: false
    vars:
      ansible_become: false
    run_once: true
    tags: installation
    when: not consul_checksum.stat.exists | bool
    delegate_to: 127.0.0.1

  - name: Read package checksum
    shell: grep "{{ consul_pkg }}" "{{ install_temp.path }}/consul_{{ consul_version }}_SHA256SUMS" | awk '{print $1}'
    become: false
    vars:
      ansible_become: false
    register: consul_sha256
    tags:
      - installation
      - skip_ansible_lint
    run_once: true
    delegate_to: 127.0.0.1

  - name: Check Consul package file
    stat:
      path: "{{ install_temp.path }}/{{ consul_pkg }}"
    become: false
    vars:
      ansible_become: false
    register: consul_package
    tags: installation
    run_once: true
    delegate_to: 127.0.0.1

  - name: Download Consul package
    get_url:
      url: "{{ consul_zip_url }}"
      dest: "{{ install_temp.path }}/{{ consul_pkg }}"
      checksum: "sha256:{{ consul_sha256.stdout }}"
      timeout: "42"
    become: false
    vars:
      ansible_become: false
    tags: installation
    when: not consul_package.stat.exists | bool
    run_once: true
    delegate_to: 127.0.0.1
    ignore_errors: "{{ ansible_check_mode }}"

  - name: Unarchive Consul package
    unarchive:
      src: "{{ install_temp.path }}/{{ consul_pkg }}"
      dest: "{{ install_temp.path }}/"
      creates: "{{ install_temp.path }}/consul"
    become: false
    vars:
      ansible_become: false
    tags:
      - installation
      - skip_ansible_lint
    run_once: true
    delegate_to: 127.0.0.1
    ignore_errors: "{{ ansible_check_mode }}"

  - name: Install Consul
    copy:
      src: "{{ install_temp.path }}/consul"
      dest: "{{ consul_bin_path }}/consul"
      owner: "{{ consul_user }}"
      group: "{{ consul_group }}"
      mode: 0755
    tags: installation
    ignore_errors: "{{ ansible_check_mode }}"

  - name: Cleanup
    file:
      path: "{{ install_temp.path }}"
      state: "absent"
    become: false
    vars:
      ansible_become: false
    tags: installation
    run_once: true
    delegate_to: 127.0.0.1
    ignore_errors: "{{ ansible_check_mode }}"

  when:
    - consul_install_binary | bool
